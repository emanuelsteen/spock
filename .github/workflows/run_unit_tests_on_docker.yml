name: Docker tests
run-name: ${{ github.actor }} is running the test schedules.
on:
  # Run at midnight (00:00) and noon (12:00) UTC every day
  # schedule:
  #   - cron: '0 0 * * *'    # Midnight UTC

  # Run on any push to any branch
   push:
     branches: gh_actions
      ## - '**'  # Matches all branches

  # Run when a pull request is opened, synchronized, or reopened
   pull_request:
     types: [opened, synchronize, reopened]
    
jobs:
  run-scripts:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        pgver: [15, 16, 17]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup the PGDG APT repo on Linux
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        
        run: |
          sudo sh -c 'echo "deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

      - name: Install platform dependencies on Linux
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: |
          sudo apt-get update && sudo apt-get install -y \
              build-essential \
              libreadline-dev \
              zlib1g-dev \
              bison \
              flex \
              curl \
              ca-certificates \
              gcc \
              git \
              wget \
              libicu-dev \
              && sudo rm -rf /var/lib/apt/lists/*

      - name: Create the postgres user and data directory
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: |
            sudo mkdir -p /var/lib/postgresql/data && \
            sudo chown -R postgres:postgres /var/lib/postgresql 

      - name: Create the work directory and move into it
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: |
            sudo mkdir /usr/src/postgresql
            sudo cd /usr/src/postgresql
            
      - name: Clone the Postgres repo
        run: |
          git clone --depth=1 https://github.com/postgres/postgres.git postgres
          cd postgres
          git fetch --tags

      - name: Find the highest PostgreSQL tag for version ${{ matrix.pgver }}
        run: |
          cd postgres
          HIGHEST_TAG=$(git tag -l "REL_${{ matrix.pgver }}*" | sort -V | tail -n 1)
          echo "HIGHEST_TAG=$HIGHEST_TAG" >> $GITHUB_ENV

      - name: Checkout highest version tag
        run: |
          cd postgres
          git checkout $HIGHEST_TAG

      - name: Verify selected PostgreSQL tag
        run: |
          echo "Checked out tag: $HIGHEST_TAG"

      - name: List repository files
        run: ls -la postgres

      - name: Apply patches for PostgreSQL ${{ matrix.pgver }}
        run: |
          cd postgres
          PATCH_DIR="../spock-private/patches"
          if [ -d "$PATCH_DIR" ]; then
            for patch in $PATCH_DIR/pg${{ matrix.pgver }}_*; do
              if [ -f "$patch" ]; then
                echo "Applying patch: $patch"
                git apply "$patch" || { echo "Failed to apply $patch"; exit 1; }
              fi
            done
          else
            echo "Patch directory not found: $PATCH_DIR"
          fi

      - name: Verify applied patches
        run: |
            cd postgres
            git diff --stat

      - name: Build PostgreSQL
        run: |
            cd postgres
            ./configure --prefix=/usr/local/pgsql
            make -j$(nproc)
            make install

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "PostgreSQL is ready!"
                exit 0
            fi
            echo "PostgreSQL is not ready yet. Retrying in 5 seconds..."
            sleep 5
            done
            echo "PostgreSQL did not become ready in time. Exiting."
            exit 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          sudo apt -y update
          sudo apt install -y postgresql-client \
              libpq-dev \
              python3-dev \
              python3-psycopg2 \
              python3-dotenv

   
