name: Docker tests
run-name: ${{ github.actor }} is running the test schedules.

on:
  push:
    branches:
      - gh_actions
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  run-scripts:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        pgver: [15, 16, 17]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}

    - name: configure passwordless sudo
      run: |
        echo "ALL ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/passwordless
        sudo chmod 0440 /etc/sudoers.d/passwordless

    - name: Verify Passwordless Sudo
      run: |
        sudo whoami
        sudo pwd

    - name: Configure Passwordless SSH
      run: |
        mkdir -p ~/.ssh
        ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -q -N ""
        cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
        chmod 700 ~/.ssh && chmod 600 ~/.ssh/authorized_keys

    - name: Verify Passwordless SSH
      run: |
        ssh -o StrictHostKeyChecking=no localhost "echo passwordless SSH configured"

    - name: Install System Dependencies
      run: |
        sudo apt-get update &&
        sudo apt-get install -y \
          build-essential \
          libreadline-dev \
          zlib1g-dev \
          bison \
          flex \
          curl \
          ca-certificates \
          gcc \
          git \
          wget \
          libicu-dev \
          && sudo rm -rf /var/lib/apt/lists/*

    - name: Install Python Dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install python-dotenv psycopg2 psycopg 

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Build Docker Image
      run: |
        docker build -t platform_test docker/

    - name: Create Docker Network
      run: |
        docker network create pg_network || true

    - name: Run Docker Container
      run: |
        docker run -d --name platform_test --network pg_network platform_test

    - name: Wait for SSH to Start
      run: |
        echo "Waiting for SSH to start..."
        for i in {1..10}; do
          if docker exec platform_test pgrep sshd > /dev/null; then
            echo "SSHD is running!"
            exit 0
          fi
          echo "SSHD not ready, retrying..."
          sleep 2
        done
        echo "SSHD failed to start!"
        exit 1

    - name: Verify Container User
      run: |
        docker exec platform_test whoami

    - name: Create PostgreSQL Directories
      run: |
        sudo mkdir -p /var/lib/postgresql/data
        sudo chown -R postgres:postgres /var/lib/postgresql

    - name: Set PostgreSQL Environment Variables
      run: |
        echo 'export PATH="/usr/local/pgsql/bin:$PATH"' >> $GITHUB_ENV
        echo 'export PGDATA="/var/lib/postgresql/data"' >> $GITHUB_ENV

    - name: Enable Passwordless Sudo for postgres
      run: |
        echo "postgres ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/postgres
        sudo chmod 0440 /etc/sudoers.d/postgres

    - name: Clone Postgres and List Files Without Password
      run: |
        docker exec -u postgres platform_test bash -c "
          sudo apt-get update && sudo apt-get install -y git && \
          git clone https://github.com/postgres/postgres.git /home/postgres/postgres-source && \
          cd /home/postgres/postgres-source && \
          ls -la
        "

    - name: Put your test cases here
      run: |
        echo "Current User: $(whoami)" > latest.log
        echo "Current Path: $(pwd)" >> latest.log
        cat latest.log

    - name: Upload Log File as Artifact
      if: success() || failure()
      uses: actions/upload-artifact@v4
      with:
        name: latest-log-${{ matrix.pgver }}
        path: latest.log


